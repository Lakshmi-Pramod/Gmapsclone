{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megha\\\\OneDrive\\\\Documents\\\\GitHub\\\\Gmapsclone\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport { MapContainer, TileLayer, Marker, useMap } from \"react-leaflet\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userLocation = [10.9027, 76.9006]; // Example: Ettimadai Coordinates\n\nconst Routing = ({\n  destinationCoords\n}) => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (!map || !destinationCoords) return;\n\n    // Remove old routes safely\n    map.eachLayer(layer => {\n      if (layer instanceof L.Routing.Control) {\n        map.removeControl(layer);\n      }\n    });\n    const routingControl = L.Routing.control({\n      waypoints: [L.latLng(userLocation[0], userLocation[1]),\n      // User's location\n      L.latLng(destinationCoords[0], destinationCoords[1]) // Destination\n      ],\n      createMarker: () => null,\n      // Removes default markers\n      routeWhileDragging: true,\n      addWaypoints: false,\n      // Disables waypoint addition\n      draggableWaypoints: false,\n      // Prevents dragging points\n      showAlternatives: false,\n      // Hides alternative routes\n      fitSelectedRoutes: true,\n      lineOptions: {\n        styles: [{\n          color: \"red\",\n          weight: 4\n        }],\n        // Customize route color\n        className: \"route-layer\"\n      },\n      itinerary: false // **Removes the popup panel**\n    }).addTo(map);\n    return () => {\n      if (map && routingControl) {\n        map.removeControl(routingControl);\n      }\n    };\n  }, [map, destinationCoords]);\n  return null;\n};\n_s(Routing, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = Routing;\nconst App = () => {\n  _s2();\n  const [destination, setDestination] = useState(\"\");\n  const [destinationCoords, setDestinationCoords] = useState(null);\n  const fetchCoordinates = async () => {\n    try {\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${destination}`);\n      if (response.data.length > 0) {\n        const {\n          lat,\n          lon\n        } = response.data[0];\n        setDestinationCoords([parseFloat(lat), parseFloat(lon)]);\n      } else {\n        alert(\"Location not found. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching location:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google Maps Clone (Using GMaps & ORS)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter destination...\",\n      value: destination,\n      onChange: e => setDestination(e.target.value),\n      style: {\n        padding: \"8px\",\n        width: \"300px\",\n        marginRight: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCoordinates,\n      style: {\n        padding: \"8px 15px\",\n        backgroundColor: \"#007bff\",\n        color: \"#fff\",\n        border: \"none\",\n        cursor: \"pointer\"\n      },\n      children: \"Search Route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: userLocation,\n      zoom: 14,\n      style: {\n        height: \"500px\",\n        width: \"90%\",\n        margin: \"20px auto\",\n        border: \"2px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: userLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), destinationCoords && /*#__PURE__*/_jsxDEV(Marker, {\n        position: destinationCoords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 31\n      }, this), destinationCoords && /*#__PURE__*/_jsxDEV(Routing, {\n        destinationCoords: destinationCoords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"YCi/UqLwhjqDfi8EJpysDFPhB4s=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Routing\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","L","MapContainer","TileLayer","Marker","useMap","axios","jsxDEV","_jsxDEV","userLocation","Routing","destinationCoords","_s","map","eachLayer","layer","Control","removeControl","routingControl","control","waypoints","latLng","createMarker","routeWhileDragging","addWaypoints","draggableWaypoints","showAlternatives","fitSelectedRoutes","lineOptions","styles","color","weight","className","itinerary","addTo","_c","App","_s2","destination","setDestination","setDestinationCoords","fetchCoordinates","response","get","data","length","lat","lon","parseFloat","alert","error","console","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","width","marginRight","onClick","backgroundColor","border","cursor","center","zoom","height","margin","url","position","_c2","$RefreshReg$"],"sources":["C:/Users/megha/OneDrive/Documents/GitHub/Gmapsclone/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet-routing-machine\";\r\nimport { MapContainer, TileLayer, Marker, useMap } from \"react-leaflet\";\r\nimport axios from \"axios\";\r\n\r\nconst userLocation = [10.9027, 76.9006]; // Example: Ettimadai Coordinates\r\n\r\nconst Routing = ({ destinationCoords }) => {\r\n  const map = useMap();\r\n\r\n  useEffect(() => {\r\n    if (!map || !destinationCoords) return;\r\n\r\n    // Remove old routes safely\r\n    map.eachLayer((layer) => {\r\n      if (layer instanceof L.Routing.Control) {\r\n        map.removeControl(layer);\r\n      }\r\n    });\r\n\r\n    const routingControl = L.Routing.control({\r\n      waypoints: [\r\n        L.latLng(userLocation[0], userLocation[1]),  // User's location\r\n        L.latLng(destinationCoords[0], destinationCoords[1]),  // Destination\r\n      ],\r\n      createMarker: () => null, // Removes default markers\r\n      routeWhileDragging: true,\r\n      addWaypoints: false, // Disables waypoint addition\r\n      draggableWaypoints: false, // Prevents dragging points\r\n      showAlternatives: false, // Hides alternative routes\r\n      fitSelectedRoutes: true,\r\n      lineOptions: {\r\n        styles: [{ color: \"red\", weight: 4 }], // Customize route color\r\n        className: \"route-layer\",\r\n      },\r\n      itinerary: false, // **Removes the popup panel**\r\n    }).addTo(map);\r\n\r\n    return () => {\r\n      if (map && routingControl) {\r\n        map.removeControl(routingControl);\r\n      }\r\n    };\r\n  }, [map, destinationCoords]);\r\n\r\n  return null;\r\n};\r\n\r\nconst App = () => {\r\n  const [destination, setDestination] = useState(\"\");\r\n  const [destinationCoords, setDestinationCoords] = useState(null);\r\n\r\n  const fetchCoordinates = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://nominatim.openstreetmap.org/search?format=json&q=${destination}`\r\n      );\r\n\r\n      if (response.data.length > 0) {\r\n        const { lat, lon } = response.data[0];\r\n        setDestinationCoords([parseFloat(lat), parseFloat(lon)]);\r\n      } else {\r\n        alert(\"Location not found. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching location:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"10px\" }}>\r\n      <h1>Google Maps Clone (Using GMaps & ORS)</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter destination...\"\r\n        value={destination}\r\n        onChange={(e) => setDestination(e.target.value)}\r\n        style={{\r\n          padding: \"8px\",\r\n          width: \"300px\",\r\n          marginRight: \"10px\",\r\n        }}\r\n      />\r\n      <button\r\n        onClick={fetchCoordinates}\r\n        style={{\r\n          padding: \"8px 15px\",\r\n          backgroundColor: \"#007bff\",\r\n          color: \"#fff\",\r\n          border: \"none\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Search Route\r\n      </button>\r\n\r\n      <MapContainer\r\n        center={userLocation}\r\n        zoom={14}\r\n        style={{\r\n          height: \"500px\",\r\n          width: \"90%\",\r\n          margin: \"20px auto\",\r\n          border: \"2px solid black\",\r\n        }}\r\n      >\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        <Marker position={userLocation} />\r\n        {destinationCoords && <Marker position={destinationCoords} />}\r\n        {destinationCoords && <Routing destinationCoords={destinationCoords} />}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}