{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megha\\\\OneDrive\\\\Documents\\\\GitHub\\\\Gmapsclone\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Polyline, useMap } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"YOUR_OPENROUTESERVICE_API_KEY\";\nconst RouteMap = ({\n  route\n}) => {\n  _s();\n  const map = useMap();\n  if (route.length > 0) {\n    map.fitBounds(route);\n  }\n  return /*#__PURE__*/_jsxDEV(Polyline, {\n    positions: route,\n    color: \"red\",\n    weight: 5\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(RouteMap, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n  return [useMap];\n});\n_c = RouteMap;\nconst App = () => {\n  _s2();\n  const [route, setRoute] = useState([]);\n  const [destination, setDestination] = useState(\"\");\n  const handleSearch = async () => {\n    const start = [76.9516, 10.9027]; // Coordinates for Ettimadai\n    const end = await getCoordinates(destination);\n    if (!end) {\n      alert(\"Invalid destination\");\n      return;\n    }\n    const routeData = await fetchRoute(start, end);\n    if (routeData) {\n      setRoute(routeData);\n    } else {\n      alert(\"Could not fetch route\");\n    }\n  };\n  const getCoordinates = async location => {\n    const response = await fetch(`https://api.openrouteservice.org/geocode/search?api_key=${API_KEY}&text=${location}`);\n    const data = await response.json();\n    if (data.features.length === 0) return null;\n    return data.features[0].geometry.coordinates.reverse();\n  };\n  const fetchRoute = async (start, end) => {\n    const response = await fetch(\"https://api.openrouteservice.org/v2/directions/driving-car/geojson\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": API_KEY\n      },\n      body: JSON.stringify({\n        coordinates: [start, end]\n      })\n    });\n    const data = await response.json();\n    return data.features[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Route Finder (Using OpenRouteService)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter destination...\",\n        value: destination,\n        onChange: e => setDestination(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [10.9027, 76.9516],\n      zoom: 13,\n      className: \"map\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), route.length > 0 && /*#__PURE__*/_jsxDEV(RouteMap, {\n        route: route\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [10.9027, 76.9516]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"V4BcxRZtoXNTsT9/tiaw5uNDcck=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RouteMap\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","L","MapContainer","TileLayer","Marker","Polyline","useMap","jsxDEV","_jsxDEV","API_KEY","RouteMap","route","_s","map","length","fitBounds","positions","color","weight","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","setRoute","destination","setDestination","handleSearch","start","end","getCoordinates","alert","routeData","fetchRoute","location","response","fetch","data","json","features","geometry","coordinates","reverse","method","headers","body","JSON","stringify","coord","className","children","type","placeholder","value","onChange","e","target","onClick","center","zoom","url","attribution","position","_c2","$RefreshReg$"],"sources":["C:/Users/megha/OneDrive/Documents/GitHub/Gmapsclone/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { MapContainer, TileLayer, Marker, Polyline, useMap } from \"react-leaflet\";\r\n\r\nconst API_KEY = \"YOUR_OPENROUTESERVICE_API_KEY\";\r\n\r\nconst RouteMap = ({ route }) => {\r\n  const map = useMap();\r\n\r\n  if (route.length > 0) {\r\n    map.fitBounds(route);\r\n  }\r\n\r\n  return (\r\n    <Polyline positions={route} color=\"red\" weight={5} />\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [route, setRoute] = useState([]);\r\n  const [destination, setDestination] = useState(\"\");\r\n\r\n  const handleSearch = async () => {\r\n    const start = [76.9516, 10.9027]; // Coordinates for Ettimadai\r\n    const end = await getCoordinates(destination);\r\n\r\n    if (!end) {\r\n      alert(\"Invalid destination\");\r\n      return;\r\n    }\r\n\r\n    const routeData = await fetchRoute(start, end);\r\n    if (routeData) {\r\n      setRoute(routeData);\r\n    } else {\r\n      alert(\"Could not fetch route\");\r\n    }\r\n  };\r\n\r\n  const getCoordinates = async (location) => {\r\n    const response = await fetch(\r\n      `https://api.openrouteservice.org/geocode/search?api_key=${API_KEY}&text=${location}`\r\n    );\r\n    const data = await response.json();\r\n    if (data.features.length === 0) return null;\r\n    return data.features[0].geometry.coordinates.reverse();\r\n  };\r\n\r\n  const fetchRoute = async (start, end) => {\r\n    const response = await fetch(\r\n      \"https://api.openrouteservice.org/v2/directions/driving-car/geojson\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": API_KEY,\r\n        },\r\n        body: JSON.stringify({ coordinates: [start, end] }),\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data.features[0].geometry.coordinates.map((coord) => [coord[1], coord[0]]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Route Finder (Using OpenRouteService)</h1>\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter destination...\"\r\n          value={destination}\r\n          onChange={(e) => setDestination(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Search Route</button>\r\n      </div>\r\n\r\n      <MapContainer center={[10.9027, 76.9516]} zoom={13} className=\"map\">\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n        />\r\n        {route.length > 0 && <RouteMap route={route} />}\r\n        <Marker position={[10.9027, 76.9516]} />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}