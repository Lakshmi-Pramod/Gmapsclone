{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megha\\\\OneDrive\\\\Documents\\\\GitHub\\\\Gmapsclone\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\nimport axios from \"axios\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOMTOM_API_KEY = \"2g4vc4Kt2TcQkXJBGLpTpBwOugCet6UO\"; // Replace with your API key\n\nconst App = () => {\n  _s();\n  const [source, setSource] = useState([10.9027, 76.9006]); // Ettimadai\n  const [destination, setDestination] = useState(\"\");\n  const [route, setRoute] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  // Function to get coordinates of a place using TomTom Geocoding API\n  const getCoordinates = async place => {\n    try {\n      const response = await axios.get(`https://api.tomtom.com/search/2/geocode/${encodeURIComponent(place)}.json?key=${TOMTOM_API_KEY}`);\n      if (response.data.results.length > 0) {\n        const {\n          lat,\n          lon\n        } = response.data.results[0].position;\n        return [lat, lon];\n      } else {\n        throw new Error(\"Location not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching coordinates:\", error);\n      setError(\"Location not found.\");\n      return null;\n    }\n  };\n\n  // Function to fetch the route using TomTom Routing API\n  const handleSearch = async () => {\n    setError(\"\"); // Clear previous errors\n    if (!destination) return;\n    const destinationCoords = await getCoordinates(destination);\n    if (!destinationCoords) return;\n    try {\n      const routeUrl = `https://api.tomtom.com/routing/1/calculateRoute/${source[0]},${source[1]}:${destinationCoords[0]},${destinationCoords[1]}/json?key=${TOMTOM_API_KEY}&routeType=fastest&traffic=true`;\n      const response = await axios.get(routeUrl);\n      if (response.data.routes && response.data.routes.length > 0) {\n        const routePoints = response.data.routes[0].legs[0].points.map(({\n          latitude,\n          longitude\n        }) => [latitude, longitude]);\n        setRoute(routePoints);\n      } else {\n        setError(\"No route found.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching route:\", error);\n      setError(\"Failed to fetch route.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart City Navigation (Using TomTom)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter destination...\",\n      value: destination,\n      onChange: e => setDestination(e.target.value),\n      style: {\n        padding: \"8px\",\n        marginRight: \"8px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      style: {\n        padding: \"8px\",\n        cursor: \"pointer\"\n      },\n      children: \"Search Route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: source,\n      zoom: 14,\n      style: {\n        height: \"500px\",\n        width: \"100%\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), route.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"NlTXW1J1d+b9R1PEDszKnyIqfT8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Polyline","axios","jsxDEV","_jsxDEV","TOMTOM_API_KEY","App","_s","source","setSource","destination","setDestination","route","setRoute","error","setError","getCoordinates","place","response","get","encodeURIComponent","data","results","length","lat","lon","position","Error","console","handleSearch","destinationCoords","routeUrl","routes","routePoints","legs","points","map","latitude","longitude","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","marginRight","onClick","cursor","color","center","zoom","height","width","marginTop","url","positions","_c","$RefreshReg$"],"sources":["C:/Users/megha/OneDrive/Documents/GitHub/Gmapsclone/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\r\nimport axios from \"axios\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst TOMTOM_API_KEY = \"2g4vc4Kt2TcQkXJBGLpTpBwOugCet6UO\"; // Replace with your API key\r\n\r\nconst App = () => {\r\n    const [source, setSource] = useState([10.9027, 76.9006]); // Ettimadai\r\n    const [destination, setDestination] = useState(\"\");\r\n    const [route, setRoute] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // Function to get coordinates of a place using TomTom Geocoding API\r\n    const getCoordinates = async (place) => {\r\n        try {\r\n            const response = await axios.get(\r\n                `https://api.tomtom.com/search/2/geocode/${encodeURIComponent(place)}.json?key=${TOMTOM_API_KEY}`\r\n            );\r\n            if (response.data.results.length > 0) {\r\n                const { lat, lon } = response.data.results[0].position;\r\n                return [lat, lon];\r\n            } else {\r\n                throw new Error(\"Location not found\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching coordinates:\", error);\r\n            setError(\"Location not found.\");\r\n            return null;\r\n        }\r\n    };\r\n\r\n    // Function to fetch the route using TomTom Routing API\r\n    const handleSearch = async () => {\r\n        setError(\"\"); // Clear previous errors\r\n        if (!destination) return;\r\n\r\n        const destinationCoords = await getCoordinates(destination);\r\n        if (!destinationCoords) return;\r\n\r\n        try {\r\n            const routeUrl = `https://api.tomtom.com/routing/1/calculateRoute/${source[0]},${source[1]}:${destinationCoords[0]},${destinationCoords[1]}/json?key=${TOMTOM_API_KEY}&routeType=fastest&traffic=true`;\r\n\r\n            const response = await axios.get(routeUrl);\r\n\r\n            if (response.data.routes && response.data.routes.length > 0) {\r\n                const routePoints = response.data.routes[0].legs[0].points.map(({ latitude, longitude }) => [latitude, longitude]);\r\n                setRoute(routePoints);\r\n            } else {\r\n                setError(\"No route found.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching route:\", error);\r\n            setError(\"Failed to fetch route.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n            <h2>Smart City Navigation (Using TomTom)</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter destination...\"\r\n                value={destination}\r\n                onChange={(e) => setDestination(e.target.value)}\r\n                style={{ padding: \"8px\", marginRight: \"8px\" }}\r\n            />\r\n            <button onClick={handleSearch} style={{ padding: \"8px\", cursor: \"pointer\" }}>\r\n                Search Route\r\n            </button>\r\n\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n            <MapContainer center={source} zoom={14} style={{ height: \"500px\", width: \"100%\", marginTop: \"20px\" }}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <Marker position={source} />\r\n                {route.length > 0 && <Polyline positions={route} color=\"red\" />}\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}