{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megha\\\\OneDrive\\\\Documents\\\\GitHub\\\\Gmapsclone\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\nimport axios from \"axios\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [source, setSource] = useState([10.9027, 76.9006]); // Default: Ettimadai\n  const [destination, setDestination] = useState(\"\");\n  const [route, setRoute] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  // Function to get coordinates of a place\n  const getCoordinates = async place => {\n    try {\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${place}`);\n      if (response.data.length > 0) {\n        return [parseFloat(response.data[0].lon), parseFloat(response.data[0].lat)];\n      } else {\n        throw new Error(\"Location not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching coordinates:\", error);\n      setError(\"Location not found.\");\n      return null;\n    }\n  };\n\n  // Function to fetch the route\n  const handleSearch = async () => {\n    setError(\"\"); // Clear previous errors\n    if (!destination) return;\n    const destinationCoords = await getCoordinates(destination);\n    if (!destinationCoords) return;\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/route\", {\n        source,\n        destination: destinationCoords\n      });\n      if (response.data.routes) {\n        setRoute(response.data.routes[0].geometry.coordinates.map(([lon, lat]) => [lat, lon]));\n      } else {\n        setError(\"No route found.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching route:\", error);\n      setError(\"Failed to fetch route.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart City Navigation (Using OpenRouteService)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter destination...\",\n      value: destination,\n      onChange: e => setDestination(e.target.value),\n      style: {\n        padding: \"8px\",\n        marginRight: \"8px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      style: {\n        padding: \"8px\",\n        cursor: \"pointer\"\n      },\n      children: \"Search Route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: source,\n      zoom: 14,\n      style: {\n        height: \"500px\",\n        width: \"100%\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), route.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"NlTXW1J1d+b9R1PEDszKnyIqfT8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Polyline","axios","jsxDEV","_jsxDEV","App","_s","source","setSource","destination","setDestination","route","setRoute","error","setError","getCoordinates","place","response","get","data","length","parseFloat","lon","lat","Error","console","handleSearch","destinationCoords","post","routes","geometry","coordinates","map","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","marginRight","onClick","cursor","color","center","zoom","height","width","marginTop","url","position","positions","_c","$RefreshReg$"],"sources":["C:/Users/megha/OneDrive/Documents/GitHub/Gmapsclone/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\r\nimport axios from \"axios\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst App = () => {\r\n    const [source, setSource] = useState([10.9027, 76.9006]); // Default: Ettimadai\r\n    const [destination, setDestination] = useState(\"\");\r\n    const [route, setRoute] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // Function to get coordinates of a place\r\n    const getCoordinates = async (place) => {\r\n        try {\r\n            const response = await axios.get(\r\n                `https://nominatim.openstreetmap.org/search?format=json&q=${place}`\r\n            );\r\n            if (response.data.length > 0) {\r\n                return [parseFloat(response.data[0].lon), parseFloat(response.data[0].lat)];\r\n            } else {\r\n                throw new Error(\"Location not found\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching coordinates:\", error);\r\n            setError(\"Location not found.\");\r\n            return null;\r\n        }\r\n    };\r\n\r\n    // Function to fetch the route\r\n    const handleSearch = async () => {\r\n        setError(\"\"); // Clear previous errors\r\n        if (!destination) return;\r\n\r\n        const destinationCoords = await getCoordinates(destination);\r\n        if (!destinationCoords) return;\r\n\r\n        try {\r\n            const response = await axios.post(\"http://127.0.0.1:5000/route\", {\r\n                source,\r\n                destination: destinationCoords,\r\n            });\r\n\r\n            if (response.data.routes) {\r\n                setRoute(response.data.routes[0].geometry.coordinates.map(([lon, lat]) => [lat, lon]));\r\n            } else {\r\n                setError(\"No route found.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching route:\", error);\r\n            setError(\"Failed to fetch route.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n            <h2>Smart City Navigation (Using OpenRouteService)</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter destination...\"\r\n                value={destination}\r\n                onChange={(e) => setDestination(e.target.value)}\r\n                style={{ padding: \"8px\", marginRight: \"8px\" }}\r\n            />\r\n            <button onClick={handleSearch} style={{ padding: \"8px\", cursor: \"pointer\" }}>\r\n                Search Route\r\n            </button>\r\n\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n            <MapContainer center={source} zoom={14} style={{ height: \"500px\", width: \"100%\", marginTop: \"20px\" }}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <Marker position={source} />\r\n                {route.length > 0 && <Polyline positions={route} color=\"red\" />}\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}