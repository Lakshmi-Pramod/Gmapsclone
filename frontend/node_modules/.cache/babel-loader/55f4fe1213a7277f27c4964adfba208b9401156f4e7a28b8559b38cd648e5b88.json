{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megha\\\\OneDrive\\\\Documents\\\\GitHub\\\\Gmapsclone\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\nimport axios from \"axios\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst predefinedLocations = {\n  \"Ettimadai\": [10.9027, 76.9006],\n  \"Coimbatore Airport\": [11.029, 77.0403],\n  \"Brookefields Mall\": [11.0144, 76.9802],\n  \"Gandhipuram Bus Stand\": [11.0176, 76.9725]\n};\n\n// Replace with your TomTom API Key\nconst TOMTOM_API_KEY = \"YOUR_TOMTOM_API_KEY\";\nconst App = () => {\n  _s();\n  const [source] = useState(predefinedLocations[\"Ettimadai\"]);\n  const [destination, setDestination] = useState(\"\");\n  const [route, setRoute] = useState([]);\n  const [error, setError] = useState(\"\");\n  const handleSearch = async () => {\n    setError(\"\");\n    if (!destination || !predefinedLocations[destination]) {\n      setError(\"Invalid destination. Choose a predefined location.\");\n      return;\n    }\n    const destinationCoords = predefinedLocations[destination];\n    try {\n      const url = `https://api.tomtom.com/routing/1/calculateRoute/${source[0]},${source[1]}:${destinationCoords[0]},${destinationCoords[1]}/json?key=${TOMTOM_API_KEY}&travelMode=car`;\n      const response = await axios.get(url);\n      if (response.data.routes && response.data.routes.length > 0) {\n        const routePoints = response.data.routes[0].legs[0].points.map(point => [point.latitude, point.longitude]);\n        setRoute(routePoints);\n      } else {\n        setError(\"No route found.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching route:\", error);\n      setError(\"Failed to fetch route.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart City Navigation (Leaflet + TomTom)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: destination,\n      onChange: e => setDestination(e.target.value),\n      style: {\n        padding: \"8px\",\n        marginRight: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Destination\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), Object.keys(predefinedLocations).map(place => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: place,\n        children: place\n      }, place, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      style: {\n        padding: \"8px\",\n        cursor: \"pointer\"\n      },\n      children: \"Search Route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: source,\n      zoom: 14,\n      style: {\n        height: \"500px\",\n        width: \"100%\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), route.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"stRVFMSBZ0wB9+/0QMtqYJ6kWiI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Polyline","axios","jsxDEV","_jsxDEV","predefinedLocations","TOMTOM_API_KEY","App","_s","source","destination","setDestination","route","setRoute","error","setError","handleSearch","destinationCoords","url","response","get","data","routes","length","routePoints","legs","points","map","point","latitude","longitude","console","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","marginRight","Object","keys","place","onClick","cursor","color","center","zoom","height","width","marginTop","position","positions","_c","$RefreshReg$"],"sources":["C:/Users/megha/OneDrive/Documents/GitHub/Gmapsclone/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\r\nimport axios from \"axios\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst predefinedLocations = {\r\n    \"Ettimadai\": [10.9027, 76.9006],\r\n    \"Coimbatore Airport\": [11.029, 77.0403],\r\n    \"Brookefields Mall\": [11.0144, 76.9802],\r\n    \"Gandhipuram Bus Stand\": [11.0176, 76.9725]\r\n};\r\n\r\n// Replace with your TomTom API Key\r\nconst TOMTOM_API_KEY = \"YOUR_TOMTOM_API_KEY\";\r\n\r\nconst App = () => {\r\n    const [source] = useState(predefinedLocations[\"Ettimadai\"]);\r\n    const [destination, setDestination] = useState(\"\");\r\n    const [route, setRoute] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleSearch = async () => {\r\n        setError(\"\");\r\n        if (!destination || !predefinedLocations[destination]) {\r\n            setError(\"Invalid destination. Choose a predefined location.\");\r\n            return;\r\n        }\r\n\r\n        const destinationCoords = predefinedLocations[destination];\r\n\r\n        try {\r\n            const url = `https://api.tomtom.com/routing/1/calculateRoute/${source[0]},${source[1]}:${destinationCoords[0]},${destinationCoords[1]}/json?key=${TOMTOM_API_KEY}&travelMode=car`;\r\n            \r\n            const response = await axios.get(url);\r\n\r\n            if (response.data.routes && response.data.routes.length > 0) {\r\n                const routePoints = response.data.routes[0].legs[0].points.map((point) => [point.latitude, point.longitude]);\r\n                setRoute(routePoints);\r\n            } else {\r\n                setError(\"No route found.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching route:\", error);\r\n            setError(\"Failed to fetch route.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n            <h2>Smart City Navigation (Leaflet + TomTom)</h2>\r\n\r\n            <select value={destination} onChange={(e) => setDestination(e.target.value)} style={{ padding: \"8px\", marginRight: \"8px\" }}>\r\n                <option value=\"\">Select Destination</option>\r\n                {Object.keys(predefinedLocations).map((place) => (\r\n                    <option key={place} value={place}>\r\n                        {place}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n\r\n            <button onClick={handleSearch} style={{ padding: \"8px\", cursor: \"pointer\" }}>\r\n                Search Route\r\n            </button>\r\n\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n            <MapContainer center={source} zoom={14} style={{ height: \"500px\", width: \"100%\", marginTop: \"20px\" }}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <Marker position={source} />\r\n                {route.length > 0 && <Polyline positions={route} color=\"red\" />}\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}