{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megha\\\\OneDrive\\\\Documents\\\\GitHub\\\\Gmapsclone\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport GMaps from \"gmaps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ettimadaiCenter = {\n  lat: 10.9053,\n  lng: 76.9006\n};\nfunction App() {\n  _s();\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [locations, setLocations] = useState([]);\n  const [destination, setDestination] = useState(\"\");\n  const [userLocation, setUserLocation] = useState(null);\n\n  // Initialize GMaps\n  useEffect(() => {\n    if (mapRef.current && !map) {\n      const gmap = new GMaps({\n        div: \"#map\",\n        lat: ettimadaiCenter.lat,\n        lng: ettimadaiCenter.lng,\n        zoom: 12\n      });\n      setMap(gmap);\n    }\n  }, [mapRef, map]);\n\n  // Fetch locations from backend\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/locations\").then(response => {\n      setLocations(response.data);\n      response.data.forEach(loc => {\n        map === null || map === void 0 ? void 0 : map.addMarker({\n          lat: loc.lat,\n          lng: loc.lng,\n          title: loc.name\n        });\n      });\n    }).catch(error => console.error(\"Error fetching locations:\", error));\n  }, [map]);\n\n  // Get user's location\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLoc = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(userLoc);\n        map === null || map === void 0 ? void 0 : map.addMarker({\n          lat: userLoc.lat,\n          lng: userLoc.lng,\n          title: \"You\",\n          icon: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n        });\n      });\n    }\n  }, [map]);\n\n  // Handle search for destination and draw route\n  const handleSearch = () => {\n    if (!destination || !userLocation) return;\n    map.drawRoute({\n      origin: [userLocation.lat, userLocation.lng],\n      destination: destination,\n      travelMode: \"driving\",\n      strokeColor: \"#0000FF\",\n      strokeOpacity: 0.6,\n      strokeWeight: 5\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"10px\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter destination\",\n        value: destination,\n        onChange: e => setDestination(e.target.value),\n        style: {\n          padding: \"5px\",\n          marginRight: \"10px\",\n          width: \"250px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"100vw\",\n        height: \"90vh\"\n      },\n      ref: mapRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"b1/hMcOSoJPc6axwIVOTbbISN+k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","GMaps","jsxDEV","_jsxDEV","ettimadaiCenter","lat","lng","App","_s","mapRef","map","setMap","locations","setLocations","destination","setDestination","userLocation","setUserLocation","current","gmap","div","zoom","get","then","response","data","forEach","loc","addMarker","title","name","catch","error","console","navigator","geolocation","getCurrentPosition","position","userLoc","coords","latitude","longitude","icon","handleSearch","drawRoute","origin","travelMode","strokeColor","strokeOpacity","strokeWeight","children","style","padding","display","justifyContent","type","placeholder","value","onChange","e","target","marginRight","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","height","ref","_c","$RefreshReg$"],"sources":["C:/Users/megha/OneDrive/Documents/GitHub/Gmapsclone/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport GMaps from \"gmaps\";\r\n\r\nconst ettimadaiCenter = { lat: 10.9053, lng: 76.9006 };\r\n\r\nfunction App() {\r\n    const mapRef = useRef(null);\r\n    const [map, setMap] = useState(null);\r\n    const [locations, setLocations] = useState([]);\r\n    const [destination, setDestination] = useState(\"\");\r\n    const [userLocation, setUserLocation] = useState(null);\r\n\r\n    // Initialize GMaps\r\n    useEffect(() => {\r\n        if (mapRef.current && !map) {\r\n            const gmap = new GMaps({\r\n                div: \"#map\",\r\n                lat: ettimadaiCenter.lat,\r\n                lng: ettimadaiCenter.lng,\r\n                zoom: 12\r\n            });\r\n            setMap(gmap);\r\n        }\r\n    }, [mapRef, map]);\r\n\r\n    // Fetch locations from backend\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000/locations\")\r\n            .then(response => {\r\n                setLocations(response.data);\r\n                response.data.forEach(loc => {\r\n                    map?.addMarker({\r\n                        lat: loc.lat,\r\n                        lng: loc.lng,\r\n                        title: loc.name\r\n                    });\r\n                });\r\n            })\r\n            .catch(error => console.error(\"Error fetching locations:\", error));\r\n    }, [map]);\r\n\r\n    // Get user's location\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                const userLoc = {\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude\r\n                };\r\n                setUserLocation(userLoc);\r\n                map?.addMarker({\r\n                    lat: userLoc.lat,\r\n                    lng: userLoc.lng,\r\n                    title: \"You\",\r\n                    icon: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\r\n                });\r\n            });\r\n        }\r\n    }, [map]);\r\n\r\n    // Handle search for destination and draw route\r\n    const handleSearch = () => {\r\n        if (!destination || !userLocation) return;\r\n\r\n        map.drawRoute({\r\n            origin: [userLocation.lat, userLocation.lng],\r\n            destination: destination,\r\n            travelMode: \"driving\",\r\n            strokeColor: \"#0000FF\",\r\n            strokeOpacity: 0.6,\r\n            strokeWeight: 5\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ padding: \"10px\", display: \"flex\", justifyContent: \"center\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter destination\"\r\n                    value={destination}\r\n                    onChange={(e) => setDestination(e.target.value)}\r\n                    style={{ padding: \"5px\", marginRight: \"10px\", width: \"250px\" }}\r\n                />\r\n                <button onClick={handleSearch}>Search Route</button>\r\n            </div>\r\n            <div id=\"map\" style={{ width: \"100vw\", height: \"90vh\" }} ref={mapRef}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}